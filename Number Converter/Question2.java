/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment13_2;

import java.awt.CheckboxGroup;

/**
 *
 * @author DELL
 */
public class Question2 extends javax.swing.JFrame
{
    CheckboxGroup cbg=new CheckboxGroup();

    /**
     * 
     * Creates new form Question2
     */
    public Question2()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panel1 = new java.awt.Panel();
        panel2 = new java.awt.Panel();
        label1 = new java.awt.Label();
        panel3 = new java.awt.Panel();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        panel4 = new java.awt.Panel();
        chkbinary = new java.awt.Checkbox();
        chkhex = new java.awt.Checkbox();
        chkoctal = new java.awt.Checkbox();
        txtip = new java.awt.TextField();
        label4 = new java.awt.Label();
        lblans = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Number Converter");

        panel1.setBackground(new java.awt.Color(153, 153, 0));

        panel2.setBackground(new java.awt.Color(102, 102, 0));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(222, 235, 50));
        label1.setText("Number Converter");

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel3.setBackground(new java.awt.Color(102, 102, 0));
        panel3.setForeground(new java.awt.Color(153, 153, 0));

        label2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label2.setForeground(new java.awt.Color(222, 235, 50));
        label2.setText("Enter Decimal Number");

        label3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label3.setForeground(new java.awt.Color(222, 235, 50));
        label3.setText("Choose Number System");

        panel4.setBackground(new java.awt.Color(153, 153, 0));

        chkbinary.setCheckboxGroup(cbg
        );
        chkbinary.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        chkbinary.setForeground(new java.awt.Color(128, 114, 0));
        chkbinary.setLabel("Binary");
        chkbinary.setName("Binary"); // NOI18N
        chkbinary.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                chkbinaryItemStateChanged(evt);
            }
        });

        chkhex.setCheckboxGroup(cbg);
        chkhex.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        chkhex.setForeground(new java.awt.Color(128, 114, 0));
        chkhex.setLabel("Hexadecimal");
        chkhex.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                chkhexItemStateChanged(evt);
            }
        });

        chkoctal.setCheckboxGroup(cbg
        );
        chkoctal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        chkoctal.setForeground(new java.awt.Color(128, 114, 0));
        chkoctal.setLabel("Octal");
        chkoctal.setName("Octal"); // NOI18N
        chkoctal.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                chkoctalItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkbinary, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkhex, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkoctal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkbinary, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkhex, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkoctal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        txtip.setBackground(new java.awt.Color(153, 153, 0));
        txtip.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtip.setForeground(new java.awt.Color(255, 255, 255));
        txtip.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                txtipKeyTyped(evt);
            }
        });

        label4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label4.setForeground(new java.awt.Color(204, 0, 0));
        label4.setText("Answer::");

        lblans.setAlignment(java.awt.Label.CENTER);
        lblans.setBackground(new java.awt.Color(153, 153, 0));
        lblans.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblans.setForeground(new java.awt.Color(222, 235, 50));
        lblans.setText("Answer Here");

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblans, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(txtip, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(txtip, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblans, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtipKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtipKeyTyped
    {//GEN-HEADEREND:event_txtipKeyTyped
        // TODO add your handling code here:
        String str=txtip.getText();
        if((evt.getKeyChar()>='0'  && evt.getKeyChar()<='9') ||evt.getKeyChar()=='-' && str.length()==0)
        {
          
        }
        else
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtipKeyTyped
    void convertBinary(int a)
    {
        String str=Integer.toBinaryString(a);
        lblans.setText(str);
        /*while(a>0)
        {
            str+=String.valueOf(a%2);
            a/=2;
        }
        String ans=reverse(str);*
    }
    String  reverse(String str)
    {
        String ans="";
        int j=str.length()-1;
        
        while(j>=0)
        {
            ans+=str.charAt(j);
            j--;
        }
        return ans;*/
        
    }
    void convertHex(int a)
    {
        String ans=Integer.toHexString(a);
        lblans.setText(ans);
        
        /*while(a>0)
        {
            int b=a%16;
            if(b==10)
            {
                ans+='A';
            }
            else if(b==11)
            {
                ans+='B';
            }
            else if(b==12)
            {
                ans+='C';
            }
            else if(b==13)
            {
                ans+='D';
            }
            else if(b==14)
            {
                ans+='E';
            }
            else if(b==15)
            {
                ans+='F';
            }
            else
            {
                ans+=String.valueOf(b);
            }
 
            a/=16;
        }
        System.out.println(reverse(ans));
        lblans.setText(reverse(ans));
        */
    }
    void convertOctal(int a)
    {
        String str=Integer.toOctalString(a);
        lblans.setText(str); 
        /*while(a>0)
        {
            str+=String.valueOf(a%8);
            a/=8;
        }
        String ans=reverse(str);
        
       */
    }
    
    private void chkbinaryItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_chkbinaryItemStateChanged
    {//GEN-HEADEREND:event_chkbinaryItemStateChanged
        // TODO add your handling code here:
        if(txtip.getText().isEmpty())
        {
            CommonalertBox.showMsg("Input field can't be empty",this);
            return;
        }
        int a=Integer.parseInt(txtip.getText());
        if(chkbinary.getState())
        {
            convertBinary(a);
           
        }
    }//GEN-LAST:event_chkbinaryItemStateChanged

    private void chkhexItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_chkhexItemStateChanged
    {//GEN-HEADEREND:event_chkhexItemStateChanged
        // TODO add your handling code here:
        if(txtip.getText().isEmpty())
        {
            CommonalertBox.showMsg("Input field can't be empty",this);
            return;
        }
        int a=Integer.parseInt(txtip.getText());
        if(chkhex.getState())
        {
            convertHex(a);
        }
    }//GEN-LAST:event_chkhexItemStateChanged

    private void chkoctalItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_chkoctalItemStateChanged
    {//GEN-HEADEREND:event_chkoctalItemStateChanged
        // TODO add your handling code here:
        if(txtip.getText().isEmpty())
        {
            CommonalertBox.showMsg("Input field can't be empty",this);
            return;
        }
         int a=Integer.parseInt(txtip.getText());
         if(chkoctal.getState())
        {
            convertOctal(a);
        }
    }//GEN-LAST:event_chkoctalItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Question2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Question2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Question2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Question2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                Question2 ref=new Question2();
                ref.setVisible(true);
                ref.setLocationRelativeTo(null);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox chkbinary;
    private java.awt.Checkbox chkhex;
    private java.awt.Checkbox chkoctal;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label lblans;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    private java.awt.Panel panel4;
    private java.awt.TextField txtip;
    // End of variables declaration//GEN-END:variables
}
